package com.github.junyu.solution.leetCode.easy.string;

public class _389_Find_the_Difference {

  /*  Given two strings s and t which consist of only lowercase letters.

    String t is generated by random shuffling string s and then add one more letter at a random position.

    Find the letter that was added in t.

    Example:

    Input:
    s = "abcd"
    t = "abcde"

    Output:
    e

    Explanation:
            'e' is the letter that was added.*/

//    /**
//     * 找出t中新添加的元素
//     * 构建一个hash表，里面保存s字符串中出现的字母的次数，然后再遍历字符串t，再hash表中依次减去出现的字母。
//     * 最后遍历hash表，找到值为-1的那个元素
//     *
//     * @param s
//     * @param t
//     * @return
//     */
//    public char findTheDifference(String s, String t) {
//        int letters[] = new int[26];
//        for (int i = 0; i < s.length(); i++) {
//            letters[s.charAt(i) - 'a']++;
//        }
//        for (int i = 0; i < t.length(); i++) {
//            letters[t.charAt(i) - 'a']--;
//        }
//        for (int i = 0; i < letters.length; i++) {
//            if (letters[i] == -1)
//                return (char) (i + 'a');
//        }
//        return ' ';
//    }

    /**
     * 解法二
     * 对s和t的中的所有字符与0做异或运算，最后的结果也就是新添加的字符的ascii码
     *
     * @param s
     * @param t
     * @return
     */
    public char findTheDifference(String s, String t) {
        int xor = 0;
        for (int i = 0; i < s.length(); i++) {
            xor = xor ^ s.charAt(i);
        }
        for (int i = 0; i < t.length(); i++) {
            xor = xor ^ t.charAt(i);
        }
        return (char) xor;
    }

    public static void main(String[] args) {
        System.out.println(new _389_Find_the_Difference().findTheDifference("abcd", "abcde"));
    }
}
